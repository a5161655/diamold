plugins {
    id 'fabric-loom' version "${loom_version}"
    id "org.jetbrains.kotlin.jvm" version "${kotlin_version}"
    id 'com.matthewprenger.cursegradle' version "${curse_gradle}"
    id "com.modrinth.minotaur" version "${minotaur}"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = mod_id
//noinspection GroovyAssignabilityCheck
version = "${project.mod_version}+${project.minecraft_version}"
//noinspection GroovyAssignabilityCheck
group = maven_group


repositories {
    maven { url = "https://maven.fabricmc.net/" }
    maven { url = "https://server.bbkr.space/artifactory/libs-release/" }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "net.fabricmc:yarn:${yarn_mappings}:v2"


    modImplementation "net.fabricmc:fabric-loader:${loader_version}"
    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"

    modImplementation "net.fabricmc:fabric-language-kotlin:${fabric_kotlin_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
}

curseforge {
    def props = new Properties()
    file("curseforge.properties").withInputStream { props.load(it) }
    apiKey = props."api_key"
    //noinspection GroovyAssignabilityCheck
    project {
        id = curse_id
        changelogType = "markdown"
        changelog = file('changelog.md')
        releaseType = release_type
        addGameVersion "1.18"
        addGameVersion "1.18.1"
        addGameVersion "1.18.2"
        addGameVersion "Fabric"

        relations {
            requiredDependency 'fabric-api'
            requiredDependency 'fabric-language-kotlin'
        }
        mainArtifact(remapJar)
        afterEvaluate {
            uploadTask.dependsOn(remapJar)
        }
    }
    //noinspection GroovyAssignabilityCheck
    options {
        forgeGradleIntegration = false
    }
}

import com.modrinth.minotaur.dependencies.ModDependency

modrinth {
    def props = new Properties()
    file("curseforge.properties").withInputStream { props.load(it) }
    token = props."modrinth"
    // This is the default. Remember to have the MODRINTH_TOKEN environment variable set or else this will fail, or set it to whatever you want - just make sure it stays private!
    projectId = "w1QfAiDE"
    versionNumber = mod_version // You don't need to set this manually. Will fail if Modrinth has this version already
    versionType = "release" // This is the default
    uploadFile = remapJar // With Fabric Loom or Architectury Loom, this MUST be set to `remapJar` instead of `jar`!
    gameVersions = ["1.18", "1.18.1", "1.18.2"] // Must be an array, even with only one version
    changelog = new File('changelog.md').text
    loaders = ["fabric"] // Must also be an array - no need to specify this if you're using Fabric Loom or ForgeGradle
    dependencies = [ // Yet another array. Create a new `ModDependency` or `VersionDependency` with two strings - the ID and the scope
                     new ModDependency("P7dR8mSH", "required"), // Creates a new required dependency on Fabric API
                     new ModDependency("Ha28R6CL", "required")]
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    //noinspection GroovyAssignabilityCheck
    it.options.release = 17
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${mod_id}" }
    }
}

compileKotlin.kotlinOptions.jvmTarget = "17"

// if minecraft cant be imported try running gradlew --refresh-dependencies